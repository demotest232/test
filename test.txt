import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.Test;

class SearchResultParameterConverterTest {

    @Test
    void testConvertWithInvalidType() {
        SearchResultParameterConverter converter = new SearchResultParameterConverter();
        assertThrows(IllegalArgumentException.class, () ->
            converter.convertIntoStatisticsMessage("notASearchResult")
        );
    }

    @Test
    void testConvertWithNullTable() {
        SearchResultParameterConverter converter = new SearchResultParameterConverter();
        SearchResult sr = mock(SearchResult.class);
        when(sr.getTable()).thenReturn(null);

        String result = converter.convertIntoStatisticsMessage(sr);
        assertEquals("null", result); 
    }

    @Test
    void testConvertWithValidTable() {
        SearchResultParameterConverter converter = new SearchResultParameterConverter();
        SearchResult sr = mock(SearchResult.class);
        Table table = mock(Table.class);

        when(sr.getTable()).thenReturn(table);
        when(table.getName()).thenReturn("TestTable");
        when(table.getRowCount()).thenReturn(5);

        String result = converter.convertIntoStatisticsMessage(sr);
        assertTrue(result.contains("TestTable"));
        assertTrue(result.contains("5"));
    }
}
