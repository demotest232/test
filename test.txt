import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.Test;

class DocumentParameterConverterUnitTest {

    @Test
    void testConvertWithInvalidType() {
        DocumentParameterConverter converter = new DocumentParameterConverter();
        assertThrows(IllegalArgumentException.class, () -> 
            converter.convertIntoStatisticsMessage("invalidType")
        );
    }

    @Test
    void testConvertWithNullDocId() {
        DocumentParameterConverter converter = new DocumentParameterConverter();
        Document doc = mock(Document.class);
        when(doc.getId()).thenReturn(null);

        String result = converter.convertIntoStatisticsMessage(doc);
        assertEquals("null", result); 
    }

    @Test
    void testConvertWithValidDocId() {
        DocumentParameterConverter converter = new DocumentParameterConverter();
        Document doc = mock(Document.class);
        DocumentId docId = mock(DocumentId.class);

        when(doc.getId()).thenReturn(docId);
        when(docId.getType()).thenReturn("TYPE1");
        when(docId.getId()).thenReturn("ID1");

        String result = converter.convertIntoStatisticsMessage(doc);
        assertTrue(result.contains("TYPE1"));
        assertTrue(result.contains("ID1"));
    }
}
