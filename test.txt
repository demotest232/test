// Exclude check (exact folder match, not just contains)
private boolean isExcluded(String filePath, String[] excludedFolders) {
    if (excludedFolders == null) {
        return false;
    }

    for (String folder : excludedFolders) {
        // Normalize both to avoid partial matches like "DM" vs "DML"
        if (filePath.equals(folder) || filePath.startsWith(folder + "/")) {
            return true;
        }
    }
    return false;
}

// Helper: trim path
private String trimPath(String filePath) {
    if (filePath.contains("Packages")) {
        return null; // skip Packages
    } else if (filePath.contains("Grants")) {
        return filePath; // keep Grants as-is
    } else {
        return filePath.length() > 19 ? filePath.substring(19) : filePath;
    }
}

// Main loop
List<String> filesModified = new ArrayList<>();
for (String filePath : modified) {
    if (!isExcluded(filePath, excludedFolders)) {
        String trimmed = trimPath(filePath);
        if (trimmed != null) {
            filesModified.add(trimmed);
        }
    }
}
return filesModified;
