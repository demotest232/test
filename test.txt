 @Mock
    AuditTrailConfiguration auditTrailConfiguration;

    @Mock
    Connection jdbcConnection;

    @Mock
    AuditEvent auditEvent;

    @Mock
    ConnectionHolderImpl connectionHolder;

    @Mock
    AuditEventDAO auditEventDAO;

    @Test
    void testStoreEvent() throws Exception {
        // Setup the class under test, manually set its dependencies if needed
        AuditEventStorageImpl storage = spy(new AuditEventStorageImpl(auditTrailConfiguration));

        // Inject mocks for connection and DAO
        doReturn(connectionHolder).when(storage).getConnectionHolder();
        doReturn(auditEventDAO).when(storage).getAuditEventDAO();
        doNothing().when(connectionHolder).setConnection(jdbcConnection);
        doNothing().when(connectionHolder).resetConnection();

        // Mock logEvent to return a specific value
        doReturn(999L).when(storage).logEvent(auditEvent);

        // Act
        Long result = storage.storeEvent(auditEvent, jdbcConnection);

        // Assert correct sequence
        verify(connectionHolder).setConnection(jdbcConnection);
        verify(storage).logEvent(auditEvent);
        verify(connectionHolder).resetConnection();
        assertEquals(999L, result);
    }
