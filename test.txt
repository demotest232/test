@Test
void returnsActiveValueForY() throws Exception {

    // Arrange
    DefaultValueCallback activeValue = mock(DefaultValueCallback.class);
    DefaultValueCallback notActiveValue = mock(DefaultValueCallback.class);
    GridRow row = mock(GridRow.class);
    GridCell cell = mock(GridCell.class);

   
    ActiveSwitchValueCallback callback = new ActiveSwitchValueCallback();
    Field columnIdField = callback.getClass().getDeclaredField("columnId");
    columnIdField.setAccessible(true);
    columnIdField.set(callback, "col1");

    Field activeValueField = callback.getClass().getDeclaredField("activeValue");
    activeValueField.setAccessible(true);
    activeValueField.set(callback, activeValue);

    Field notActiveValueField = callback.getClass().getDeclaredField("notActiveValue");
    notActiveValueField.setAccessible(true);
    notActiveValueField.set(callback, notActiveValue);

   
    when(cell.getColumnId()).thenReturn("col1");
    when(cell.getValue()).thenReturn("Y");
    when(row.getCells()).thenReturn(Collections.singletonList(cell));
    when(activeValue.value(row)).thenReturn("active");

    // Act
    Object result = callback.value(row);

    // Assert
    assertEquals("active", result);
    verify(activeValue).value(row);
    verify(notActiveValue, never()).value(row);
}
