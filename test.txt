 @Test
    void testInitSetsHostNameAndConfiguresLogger() {
        // Mock the static factories
        try (
            MockedStatic<HostConfigurationFactory> mockHostFactory = Mockito.mockStatic(HostConfigurationFactory.class);
            MockedStatic<EnvConfigurationFactory> mockEnvFactory = Mockito.mockStatic(EnvConfigurationFactory.class);
            MockedStatic<LoggerFactory> mockLoggerFactory = Mockito.mockStatic(LoggerFactory.class)
        ) {
            HostConfiguration mockHostConfig = Mockito.mock(HostConfiguration.class);
            EnvConfiguration mockEnvConfig = Mockito.mock(EnvConfiguration.class);
            LoggerContext mockContext = Mockito.mock(LoggerContext.class);

            // Stubbing
            mockHostFactory.when(HostConfigurationFactory::create).thenReturn(mockHostConfig);
            Mockito.when(mockHostConfig.getHostName()).thenReturn("test-host");
            
            mockEnvFactory.when(() -> EnvConfigurationFactory.create(mockHostConfig)).thenReturn(mockEnvConfig);
            Mockito.when(mockEnvConfig.getLoggerConfigFile()).thenReturn("testfile.xml");

            mockLoggerFactory.when(LoggerFactory::getILoggerFactory).thenReturn(mockContext);

            JoranConfigurator mockJoranConfigurator = Mockito.mock(JoranConfigurator.class);
            
          
            
            LogbackStaticConfigurator.init();

            // Assertions
            assertEquals("test-host", System.getProperty("hostName"));
            // You can verify interactions:
            Mockito.verify(mockContext).reset();
            Mockito.verify(mockJoranConfigurator).doConfigure("testfile.xml");
            // Additional verifications as required
        }
